/*
 ============================================================================
 Name        : circular.c
 Author      : 123
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

typedef struct
{
	int data[MAX_CIRCULAR_SIZE];	// 큐 사이즈 크기 배열
	int head,tail;				// 큐 전방 / 후방
}circularType;


void init_circular(circularType *c)
{
	c->head= c->tail = 8;
}

bool is_empty(circularType *c)
{
	return (c->head == c->tail);

}

//큐가 차있는지 확인
int is_full(circularType *c)
{
	return (c->tail == ((c->tail+1) % MAX_CIRCULAR_SIZE-1);
}

void encircular(circularType *c, int data)
{
	if(is_full(q))
		{
		printf("circular is full\n\r");
		}
	else
	{
		q->data[++(q->tail)] = data;
	}

}


//큐 확인 후 삭제 연산

int decircular(circularType *c)
{
	if (is_empty(q))
	{
		printf("circular is full\n\r");
		exit(1); //프로그램 종료 함수
	}
	int data = q->data[(q->head)];
	return data;
}


void print_circular(circularType *c)
{
	if(is_empty(q))
	{
		printf("Empty circular\n\r");
	}
	else
	{
		printf("circular:");
		for(int i=0; i< MAX_circular_SIZE; i++)
		{
			if(i <= q-> head || i > q->tail)
		{
				printf(" |");
		}
		else
		{
	    printf("%d|", q->data[i]);
		}
	} printf("\n");
}
}

int main(void)
{
	circularType circular;

	int item = 0;
	init_circular(&circular);

	encircular(&circular,3);
	print_circular(&circular);

	encircular(&circular,4);
	print_circular(&circular);

	encircular(&circular,5);
	print_circular(&circular);

	item = decircular(&circular);
	print_circular(&circular);

	encircular(&circular, 6);
	print_circular(&circular);

	item=decircular(&circular);
	print_circular(&circular);


	return 0;
}

