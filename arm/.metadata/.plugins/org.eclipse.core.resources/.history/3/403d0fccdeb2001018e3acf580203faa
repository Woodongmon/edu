#include "dht11.h"


//DHT11 초기화
void dht11Init(DHT11 *dht, GPIO_TypeDef *port, uint16_t pin)
{
  //struct's port, pin setting
  dht->port = port;
  dht->pin = pin;

}

void dht11GpioMode(DHT11 *dht, uint8_t mode)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};       //gpioc struct define and initialize


  if(mode == OUTPUT)                            //output mode setting
  {
    /*Configure GPIO pin : PC4 */
     GPIO_InitStruct.Pin = dht->pin;              //change pin number for struct's member
     GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
     GPIO_InitStruct.Pull = GPIO_NOPULL;
     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
     HAL_GPIO_Init(dht->port, &GPIO_InitStruct);  //change port for struct's member

  }
  else if(mode == INPUT)                          //input mode setting
  {
    /*Configure GPIO pin : PA7 */
    GPIO_InitStruct.Pin = dht->pin;
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;      //test check
    HAL_GPIO_Init(dht->port, &GPIO_InitStruct);
  }

}


//dht11 data read
uint8_t dht11Read(DHT11 *dht)
{
  bool ret = true;

  uint16_t timeTick = 0;
  uint8_t pulse[40] = {0};            //40bit data save array

  //temperature, humidity value
  uint8_t humValue1 = 0, humValue2 = 0;
  uint8_t tempValue1 = 0, tempValue2 = 0;
  uint8_t parityValue = 0;                  //checksum bit

  HAL_TIM_Base_Start(&htim11);

  //signal transfer
  dht11GpioMode(dht, OUTPUT);           //output setting

  HAL_GPIO_WritePin(dht->port, dht->pin, 0);
  HAL_Delay(20);
  HAL_GPIO_WritePin(dht->port, dht->pin, 1);
  delay_us(30);

  dht11GpioMode(dht, INPUT);            //input setting

  //dht11 response wait
  __HAL_TIM_SET_COUNTER(&htim11,0);   //counter initialize

  while(HAL_GPIO_ReadPin(dht->port, dht->pin) == GPIO_PIN_RESET)    //low signal wait
  {
    if(__HAL_TIM_GET_COUNTER(&htim11)>100)                          //data sheet 80us is very tight
    {
      printf("low signal time out\r\n");
      break;
    }
  }


  __HAL_TIM_SET_COUNTER(&htim11,0);   //counter initialize

  while(HAL_GPIO_ReadPin(dht->port, dht->pin) == GPIO_PIN_SET)    //high signal wait
  {
    if(__HAL_TIM_GET_COUNTER(&htim11)>100)                          //data sheet 80us is very tight
    {
      printf("high signal time out\r\n");
      break;
    }
  }


  //data receive
  for(uint8_t i=0;i<40;i++)       //40bit loop
  {
    while(HAL_GPIO_ReadPin(dht->port, dht->pin) == GPIO_PIN_RESET);   //50us wait

    __HAL_TIM_SET_COUNTER(&htim11,0);

    while(HAL_GPIO_ReadPin(dht->port, dht->pin) == GPIO_PIN_SET)
    {
      timeTick = __HAL_TIM_GET_COUNTER(&htim11);        //high signal verify

      //signal length check 0 or 1
      if(timeTick >20 && timeTick <30)
      {
        pulse[i] = 0;
      }
      else if(timeTick > 65 && timeTick <85)
      {
        pulse[i] = 1;
      }
    }
  }

  HAL_TIM_Base_Stop(&htim11);

  //temperature, humidity data processing
  for(uint8_t i=0;i<8;i++){
    humValue1 = (humValue1 << 1) + pulse[i];      //humidity upper 8bit
  }

  //길어서 모냥 바꾼거 뿐
  for(uint8_t i=8;i<16;i++){humValue2 = (humValue2 << 1) + pulse[i];}
  for(uint8_t i=16;i<24;i++){tempValue1 = (tempValue1 << 1) + pulse[i];}
  for(uint8_t i=24;i<32;i++){tempValue2 = (tempValue2 << 1) + pulse[i];}

  for(uint8_t i=32;i<40;i++){parityValue = (parityValue <<1) + pulse[i];}


  //our struct's member value insert
  dht->temperature = tempValue1;        //temperature save
  dht->humidity = humValue1;            //humidity save

  //data check sum verifying
  uint8_t checksum = humValue1 + humValue2 + tempValue1 + tempValue2;
  if(checksum != parityValue)
  {
    printf("check sum error\r\n");
    ret = false;
  }

  return ret;
}
